stages:
  - build

linux:
  stage: build
  parallel:
    matrix:
      - IMAGE: [ubuntu20.04:0.0.5, noble:0.0.6]
  image: iffregistry.fz-juelich.de/qtisas/qtisas-ci/$IMAGE
  script:
    - mkdir build && cd build
    - cmake ..
      -DCMAKE_BUILD_TYPE=Release
      -DBUILD_SHARED_LIBS=ON
    - cmake --build . --parallel $CI_NPROC

macos-arm64:
  stage: build
  tags:
    - darwin, arm64, ventura
  script:
    - mkdir build && cd build
    - cmake ..
      -Dgl2ps_ROOT=/opt/homebrew/opt/gl2ps
      -DCMAKE_PREFIX_PATH=/opt/homebrew/opt/qt
      -DBUILD_SHARED_LIBS=ON
      -DCMAKE_BUILD_TYPE=Release
    - /opt/homebrew/bin/cmake --build . --parallel $(sysctl -n hw.ncpu)

windows:
  stage: build
  parallel:
    matrix:
      - QT: 6.8.2/mingw_64
        CMPLR: mingw1310_64
        ARCH: x64
        CMAKECONFIG: -GNinja -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release
        CMAKEBUILD: --parallel
      - QT: 6.8.2/msvc2022_arm64
        CMPLR: msvc2022_arm64
        ARCH: arm64
        CMAKECONFIG: -DUNUSED=OFF
        CMAKEBUILD: --config Release -j
  tags:
    - win, $ARCH
  script:
    - mkdir build
    - cd build
    - $env:Path = "C:\Qt\Tools\$CMPLR\bin;" + $env:Path
    - $CMAKECONFIGARGS = $CMAKECONFIG -split ' '
    - $CMAKEBUILDARGS = $CMAKEBUILD -split ' '
    - cmake ..
      @CMAKECONFIGARGS
      -Dgl2ps_ROOT="C:/qtisas_libs/$CMPLR/gl2ps"
      -DCMAKE_PREFIX_PATH="C:/Qt/$QT"
      -DBUILD_SHARED_LIBS=ON
    - cmake --build . @CMAKEBUILDARGS $env:NUMBER_OF_PROCESSORS
